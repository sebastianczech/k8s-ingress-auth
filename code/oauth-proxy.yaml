apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: oauth2-proxy
    spec:
      containers:
      - name: netshoot
        image: nicolaka/netshoot
        command: ["/bin/bash"]
        args: ["-c", "while true; do ping localhost; sleep 60;done"]
      - args:
        # - --provider=github # github
        - --provider=oidc # entra-id # microsoft
        - --scope=openid # microsoft
        - --email-domain=*
        - --upstream=file:///dev/null
        - --http-address=0.0.0.0:4180
        - --skip-provider-button=true
        - --skip-jwt-bearer-tokens=true
        - --show-debug-on-error=true
        - --set-authorization-header=true
        - --pass-authorization-header=true
        - --redirect-url=https://podinfo.example.com/oauth2/callback
        env: # settings from https://oauth2-proxy.github.io/oauth2-proxy/configuration/overview
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy-id
              key: OAUTH2_PROXY_CLIENT_ID
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy-secret
              key: OAUTH2_PROXY_CLIENT_SECRET
        # docker run -ti --rm python:3-alpine python -c 'import secrets,base64; print(base64.b64encode(base64.b64encode(secrets.token_bytes(16))));'
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: "pRz17tleGoFvEN3I+UnRXA=="
        # - name: OAUTH2_PROXY_GITHUB_USERS # github
        #   value: sebastianczech
        - name: OAUTH2_PROXY_OIDC_ISSUER_URL # microsoft
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy-oidc-issuer-url
              key: OAUTH2_PROXY_OIDC_ISSUER_URL
        - name: OAUTH2_PROXY_ALLOWED_GROUPS # microsoft
          valueFrom:
            secretKeyRef:
              name: oauth2-proxy-allowed-groups
              key: OAUTH2_PROXY_ALLOWED_GROUPS
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.9.0 # latest
        imagePullPolicy: Always
        name: oauth2-proxy
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
        - containerPort: 4180
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: oauth2-proxy
  name: oauth2-proxy
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    k8s-app: oauth2-proxy
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oauth2-proxy
  namespace: kube-system
  annotations:
    nginx.ingress.kubernetes.io/proxy-buffer-size: "512k"
spec:
  ingressClassName: nginx
  rules:
  - host: podinfo.example.com
    http:
      paths:
      - path: /oauth2
        pathType: Prefix
        backend:
          service:
            name: oauth2-proxy
            port:
              number: 4180
  tls:
  - hosts:
    - podinfo.example.com
    secretName: tls-secret
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
#     nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
#   name: external-auth-oauth2
#   namespace: kube-system
# spec:
#   ingressClassName: nginx
#   rules:
#   - host: __INGRESS_HOST__
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: kubernetes-dashboard
#             port:
#               number: 80
